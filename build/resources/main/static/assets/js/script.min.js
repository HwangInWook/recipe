// 공통 기능 함수 로직 [1]
{
    document.addEventListener("DOMContentLoaded", (function () {
        // 차트 초기화 코드
        var e = document.querySelectorAll("[data-bss-chart]")
        for (var t of e) {
            t.chart = new Chart(t, JSON.parse(t.dataset.bssChart));
        }
    }), !1);

    (function () {
        "use strict";
        // 사이드바와 토글 버튼 선택
        var e = document.querySelector(".sidebar"), t = document.querySelectorAll("#sidebarToggle, #sidebarToggleTop");
        if (e) {
            // 사이드바의 collapse 초기화
            var o = [].slice.call(document.querySelectorAll(".sidebar .collapse")).map((function (e) {
                return new bootstrap.Collapse(e, {toggle: !1});
            }));
            // 사이드바 토글 버튼 클릭 이벤트 리스너
            for (var n of t) n.addEventListener("click", (function (t) {
                document.body.classList.toggle("sidebar-toggled");
                e.classList.toggle("toggled");
                if (e.classList.contains("toggled")) {
                    for (var n of o) n.hide();
                }
                $('.nav-sub-link').toggle()
            }));
            // 윈도우 리사이즈 이벤트 리스너
            window.addEventListener("resize", (function () {
                if (Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) < 768) {
                    for (var e of o) e.hide();
                }
            }));
        }
        // 사이드바 스크롤 이벤트
        var r = document.querySelector("body.fixed-nav .sidebar");
        if (r) {
            r.addEventListener("mousewheel", handleScroll);
            r.addEventListener("DOMMouseScroll", handleScroll);
            r.addEventListener("wheel", handleScroll);

            function handleScroll(e) {
                if (Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) > 768) {
                    var t = e.wheelDelta || -e.detail;
                    r.scrollTop += 30 * (t < 0 ? 1 : -1);
                    e.preventDefault();
                }
            }
        }
        // console.log("에러 발생문 시작")
        // 스크롤-투-탑 버튼 이벤트
        var l = document.querySelector(".scroll-to-top");
        if (l) {
            window.addEventListener("scroll", (function () {
                var e = window.pageYOffset;
                l.style.display = e > 100 ? "block" : "none";
            }));
        }
        // 헤더 알림갯수 파악후 숫자로 보여주는 기능
        let notice = document.querySelector("#span-notice-count");
        let noticelist = document.querySelectorAll("#noticelist a");
        notice.innerHTML = noticelist.length
        if (noticelist.length>5) {
            notice.innerHTML += "+"
        }

        // 헤더 메세지 개수 파악후 숫자로 보여주는 기능
        let span_message = document.querySelector("#span-message-count");
        let messagelist = document.querySelectorAll("#messagelist a");
        span_message.innerHTML = messagelist.length - 2 + "+";

    })();
}

let socket = new WebSocket("ws://"+location.host+"/ws/alert");
$(document).ready(function () {
    //소켓 연결
    connectWs();
});

function connectWs() {
    socket.onopen = function () {
        console.log('open');
        isEmptyCount()
    };

    socket.onmessage = function (event) {
        let $managementAlert = $('#managementAlert');
        //EchoHandler에서 설정한 메세지 넣어줌
        $managementAlert.append(event.data)
    }
}

function isEmptyCount() {
    $.ajax({
        method:'get',
        url:"/get/empty/food/item"
    }).done((resp) => {
        console.log("품절대란 발생!")
        let m_id=$("#nowId").val()
        for (let elem of resp) {
            if(elem.f_count==='0'){
                let emptyMessage={"type":"EMPTY","f_title":elem.f_title,"m_id":m_id}
                socket.send(JSON.stringify(emptyMessage))
            }
        }
        //상품이름, 대/중분류 코드,상품코드,
    }).fail((err) => {
        console.log(err)
    })
}

function commonSearch(value, event) {
    if (event.keyCode === 13) {
        $('#commonSearch').focus()
        if (window.find(value)) {
            return
        } else {
            window.location.href = "/common/search?Keyword="+value;
        }
    }
}

function pageFSearch(value, event) {
    if (event.keyCode === 13) {
        $('#pageInSearchForm').val('').focus()
        if (window.find(value)) {
            return
        } else {
            let pageNum = document.getElementById('pageNumSaveFile').name
            let pageSize = document.getElementById('pageSizeSaveFile').name
            let tab = "";
            let title = document.querySelector('#boardTitle').innerHTML;
            switch (title.substring(0, 1)) {
                case "식":
                    tab = "fooditem"
                    break;
                case "레":
                    tab = "recipe"
                    break;
                case "재":
                    tab = "invenM"
                    break;
                case "발":
                    tab = "invenO"
                    break;
                case "유":
                    tab = "invenE"
                    break;
                case "폐":
                    tab = "invenD"
                    break;
                default :
                    console.log("[검색어] 에러")
            }
            $.ajax({
                method: 'get',
                url: '/boardlist/search',
                data: {"tab": tab, "pageNum": pageNum, "pageSize": pageSize, "searchKeyword": value}
            }).done((resp) => {
                console.log("done")
                console.log(resp)
                if (title.substring(0, 1) === '식' || title.substring(0, 1) === '레') {
                    sortClassSwitch(title, resp)
                } else {
                    sortClassSwitch2(title, resp)
                }
            }).fail((err) => {

            })
        }
    }
}

// 대분류 [2]
{
// 대분류 안에 값 찍어내는 공장
    function BigCg(selectedValue) {
        let urlSort;
        $('#mDiv').html('')
        $('#sDiv').html('')
        document.querySelector('#selectedCg').value = selectedValue
        // $('#selectedCg').html(selectedValue)
        if (selectedValue == 'fooditem') {
            urlSort = "/bigcategory?cg=fooditem"
        } else if (selectedValue == 'recipe') {
            urlSort = "/bigcategory?cg=recipe"
        }
        $.ajax({
            method: 'get', url: urlSort
        }).done((resp) => {
            let bigCgDiv = $('#bDiv')
            let printInDiv = "";
            let i = 1; // div의 인덱스
            let j = 0; // 버튼의 인덱스

            for (const elem of resp) {
                if (j % 8 === 0) {
                    if (j !== 0) {
                        printInDiv += "</div>"; // 이전 div를 닫음
                    }
                    printInDiv += "<div id='bDiv" + i + "'>"; // 새로운 div를 생성
                    i++;
                }
                printInDiv += "<a class='cgTag' href='javascript:void(0)' onclick='midCg(" + elem.c_num + ")'>" + elem.c_name + "</a>";
                printInDiv += "<button class='btn-close' onclick='deleteThis(\"" + elem.c_name + "\",  this , " + elem.c_num + ")'></button><br><br>";
                j++;
            }

            if (printInDiv !== "") {
                printInDiv += "</div>"; // 마지막 div를 닫음
                bigCgDiv.html(printInDiv);
            } else {
                bigCgDiv.html("선택하신 항목의 대분류 값이 존재하지 않습니다");
                $('#mDiv').html("중분류 값이 존재하지 않습니다")
                $('#sDiv').html("소분류 값이 존재하지 않습니다")
            }
        }).fail((err) => {
            console.log("대분류 공장 폭파사건 발생!")
        })
    }
}


{
// 중분류 안에 값 찍어내는 공장
    function midCg(num) {
        document.querySelector('#selectedBigCgNum').value = num
        $.ajax({
            method: 'get', url: "/midcategory?cg=" + num
        }).done((resp) => {
            let midCgDiv = $('#mDiv')
            let printInDiv = "";
            let i = 1; // div의 인덱스
            let j = 0; // 버튼의 인덱스

            for (const elem of resp) {
                if (j % 5 === 0) {
                    if (j !== 0) {
                        printInDiv += "</div>"; // 이전 div를 닫음
                    }
                    printInDiv += "<div id='mDiv" + i + "'>"; // 새로운 div를 생성
                    i++;
                }
                printInDiv += "<a class='cgTag' href='javascript:void(0)' onclick='smCg(" + elem.c_num + ")'>" + elem.c_name + "</a>";
                printInDiv += "<button class='btn-close' onclick='deleteThis(\"" + elem.c_name + "\",  this , " + elem.c_num + ")'></button><br><br>";
                j++;
            }

            if (printInDiv !== "") {
                printInDiv += "</div>"; // 마지막 div를 닫음
                midCgDiv.html(printInDiv);
            } else {
                midCgDiv.html("선택하신 항목의 대분류 값이 존재하지 않습니다");
                $('#sDiv').html("")
                $('#sDiv').html("소분류 값이 존재하지 않습니다")
            }

        }).fail((err) => {
            console.log("중분류 공장 폭파사건 발생!")
        })
    }

    {
// 소분류 안에 값 찍어내는 공장
        function smCg(num) {
            document.querySelector('#selectedMidCgNum').value = num
            $.ajax({
                method: 'get', url: "/smallcategory?cg=" + num
            }).done((resp) => {
                let smallCgDiv = $('#sDiv')
                let printInDiv = "";
                let i = 1; // div의 인덱스
                let j = 0; // 버튼의 인덱스

                for (const elem of resp) {
                    if (j % 5 === 0) {
                        if (j !== 0) {
                            printInDiv += "</div>"; // 이전 div를 닫음
                        }
                        printInDiv += "<div id='mDiv" + i + "'>"; // 새로운 div를 생성
                        i++;
                    }
                    printInDiv += "<a class='cgTag' href='javascript:void(0)'>" + elem.c_name + "</a>";
                    printInDiv += "<button class='btn-close' onclick='deleteThis(\"" + elem.c_name + "\",  this , " + elem.c_num + ")'></button><br><br>";
                    j++;
                }

                if (printInDiv !== "") {
                    printInDiv += "</div>"; // 마지막 div를 닫음
                    smallCgDiv.html(printInDiv);
                } else {
                    $('#sDiv').html("")
                    $('#sDiv').html("소분류 값이 존재하지 않습니다")
                }
            }).fail((err) => {
                console.log("소분류 공장 폭파사건 발생!")
            })

        }

        // 페이지 크기 변환
        function savePageSize(pageSize) {
            document.getElementById('pageSizeSaveFile').name = pageSize;
            console.log("선택된 페이지크기 : " + pageSize)
            let pageNum = document.getElementById('pageNumSaveFile').name
            let boardTitle = document.getElementById('subHeaderTitle')
            let title = document.getElementById('boardTitle').innerHTML
            let thisData = "";
            let sortUrl = "";
            console.log("현재 탭 : " + boardTitle.innerHTML)

            switch (boardTitle.innerHTML.trim()) {
                case "게시판 관리":
                    sortUrl = "/boardlist"
                    thisData = {"tab": "fooditem", "pageNum": pageNum, "pageSize": pageSize}
                    break;
                case "재고 관리":
                    sortUrl = "/inventory/list"
                    thisData = {
                        "pageNum": pageNum, "pageSize": pageSize, "currentMenu": title.substring(0, 1)
                    }
                    break;
                default:
                    console.log("[페이지변환] 에러")
            }
            $.ajax({
                method: 'get', url: sortUrl, data: thisData
            }).done((resp) => {
                let currentID = document.querySelector('#boardTitle').innerHTML
                console.log("현재아이디 :" + currentID)
                console.log(resp)
                switch (currentID.substring(0, 1)) {
                    case "식":
                        sortClassSwitch(currentID, resp[0])
                        break;
                    case "레":
                        sortClassSwitch(currentID, resp)
                        break;
                    case "재":
                    case "발":
                    case "유":
                        sortClassSwitch2(currentID, resp)
                        break;
                    default:
                        console.log("[페크기변환] 에러")
                }
            }).fail((err) => {
                console.log("페크기변환 FAIL")
            })
        }

        // 페이지 이동
        function pageNumChange(e) {
            document.querySelectorAll('.page-item').forEach(function (el) {
                el.classList.remove('active');
            });
            e.parentElement.classList.add('active');
            document.getElementById('pageNumSaveFile').name = e.innerHTML
            let pageNum = document.getElementById('pageNumSaveFile').name
            let pageSize = document.getElementById('pageSizeSaveFile').name
            console.log("선택된페이지 : " + pageNum)
            console.log("선택된페크기 : " + pageSize)
            document.getElementById('startIdx').textContent = pageSize
            document.getElementById('endIdx').innerHTML = pageSize * pageNum
            document.getElementById('curPage').innerHTML = pageNum
            let sortUrl = "";
            let thisData = "";

            let tab = "fooditem"
            let currentID = document.querySelector('#subHeaderTitle').innerHTML
            console.log("현재 제목:" + currentID)
            switch (currentID) {
                case "게시판 관리":
                    sortUrl = "/boardlist"
                    thisData = {"tab": "fooditem", "pageNum": pageNum, "pageSize": pageSize}
                    break;
                case "재고 관리":
                    sortUrl = "/inventory/list"
                    thisData = {
                        "pageNum": pageNum, "pageSize": pageSize, "currentMenu": boardTitle.innerHTML.substring(0, 1)
                    }
                    break;
                default:
                    console.log("[페이지이동] 에러")
            }
            $.ajax({
                method: 'get', url: sortUrl, data: thisData
            }).done((resp) => {
                let currentID = document.querySelector('#boardTitle').innerHTML
                console.log("현재아이디" + currentID)
                switch (currentID.substring(0, 1)) {
                    case "식":
                        console.log(resp)
                        sortClassSwitch(currentID, resp[0])
                        break;
                    case "레":
                        sortClassSwitch(currentID, resp[0])
                        break;
                    case "재":
                    case "발":
                    case "유":
                        sortClassSwitch2(currentID, resp)
                        break;
                    default:
                        console.log("[페크기변환] 에러")
                }
            }).fail((err) => {
                console.log("페이지이동 FAIL")
            })

        }

        // 게시글 상세보기 모달 오픈

        function openDetailModal(e) {
            let trCode = e.closest('tr').getAttribute('data-num')
            let trClass = e.closest('tr').className
            let detailsModalBody = $('#detailsModalBody')
            let detailsModalTitle = $('#detailsModalLabel')
            let detailsModalImg = $('#detailsModalImg')
            let detailsModalInfo = $('#detailsModalInfo')
            let str = ""
            console.log("현재 클래스 : " + trClass)
            console.log("현재 행번호 : " + trCode)
            $.ajax({
                method: 'get', url: "/boardlist/modaldetails", data: {"trClass": trClass, "trCode": trCode}
            }).done((resp) => {
                console.log("[상세] DONE")
                if (trClass === 'fooditem') {
                    console.log(resp)
                    document.getElementById('modalDetailsInfoResp').data = resp
                    detailsModalTitle.html('<h2>' + resp[0].f_title + '</h2>')
                    // console.log("이미지 : " + resp[0].f_img) // 경로에 저장된 이미지의 시스템이름.확장자
                    // let fullPath = resp[0].i_path
                    // console.log("Full Path: " + fullPath);
                    //
                    // let keyword = "webapp";
                    // let index = fullPath.indexOf(keyword);
                    // console.log("키워드 길이" + keyword.length)
                    //
                    // let relativePath = fullPath.substring(index + keyword.length + 1);
                    // relativePath += resp[0].f_img
                    let relativePath = resp[0].i_path + resp[0].i_sys_name
                    console.log("이미지 주소")
                    console.log(relativePath)
                    detailsModalImg.html("<img src='" + relativePath + "' style='width: 250px;height: 250px; margin: 100px' alt='Image'>");
                    str += "<pre>글번호 : " + resp[0].f_num + "</pre>"
                    str += "<pre>상품등록일 : " + resp[0].f_date + "</pre>"
                    str += "<pre>유통기한 : " + resp[0].f_edate + "</pre>"
                    str += "<pre>상품코드 : " + resp[0].f_code + "        </pre>"
                    str += "<pre>대분류 : " + resp[0].c_num + "        </pre>"
                    str += "<pre>중분류 : " + resp[0].c_num2 + "        </pre>"
                    str += "<pre>가격 : " + resp[0].f_price + "원        </pre>"
                    str += "<pre>수량 : " + resp[0].f_count + "        </pre>"
                    str += "<pre>원산지 : " + resp[0].f_origin + "</pre>"
                    str += "<pre>보관방법 : " + resp[0].f_save + "</pre>"
                    str += "<pre>칼로리 : " + resp[0].f_cal + "</pre>"
                    str += "<pre>조회수 : " + resp[0].f_views + "</pre>"
                    detailsModalInfo.html(str)
                    detailsModalBody.html(resp[0].f_contents)
                } else if (trClass === 'recipe') {
                    detailsModalTitle.html('<h2>' + resp[0].r_title + '</h2>')
                    detailsModalBody.html(resp[0].r_contents)
                }
                detailsModalTitle.html()
                document.querySelector('#detailModal').click()
            }).fail((err) => {
                console.log("[상세] 에러")
            })
        }
        function updateInfoOpen() {
            console.log("나타나라 수정창!")
            let updateData = document.getElementById('detailsModalInfoUpdate')
            if (updateData.style.display === 'block') {
                updateData.style.display = 'none'
            } else {
                updateData.style.display = 'block'
            }
        }
        function modalDetailsUpdate() {
            console.log("모달 상세보기 수정 함수 진입")
            let DATA = document.getElementById('modalDetailsInfoResp').data
            let currentData = []
            let cnum = DATA[0].c_num
            let cnum2 = DATA[0].c_num2
            let title = DATA[0].f_title
            let fnum = DATA[0].f_num
            currentData.push(cnum)
            currentData.push(cnum2)
            currentData.push(title)
            currentData.push(fnum)
            //
            let updateFcode = document.getElementById('dmiu_f_code').value;
            let updateCnum = document.getElementById('dmiu_c_num').value;
            let updateCnum2 = document.getElementById('dmiu_c_num2').value;
            let updateFprice = document.getElementById('dmiu_f_price').value;
            let updateFcount = document.getElementById('dmiu_f_count').value;
            let updateForigin = document.getElementById('dmiu_f_origin').value;
            let updateFsave = document.getElementById('dmiu_f_save').value;
            let updateFcal = document.getElementById('dmiu_f_cal').value;
            let updateData = [];
            updateData.push(updateFcode)
            updateData.push(updateCnum)
            updateData.push(updateCnum2)
            updateData.push(updateFprice)
            updateData.push(updateFcount)
            updateData.push(updateForigin)
            updateData.push(updateFsave)
            updateData.push(updateFcal)
            console.log(updateData)
            let detailsModalBody = $('#detailsModalBody')
            let detailsModalTitle = $('#detailsModalLabel')
            let detailsModalImg = $('#detailsModalImg')
            let detailsModalInfo = $('#detailsModalInfo')
            let str = ""
            $.ajax({
                method:'post',
                url:"/boardlist/modalinfo/update",
                data:{"Cdata":currentData,"Udata":updateData}
            }).done((resp) => {
                detailsModalTitle.html('<h2>' + resp[0].f_title + '</h2>')
                let fullPath = resp[0].c_name
                let keyword = "webapp";
                let index = fullPath.indexOf(keyword);
                let relativePath = fullPath.substring(index + keyword.length + 1);
                relativePath += resp[0].f_img
                detailsModalImg.html("<img src='/" + relativePath + "' style='width: 250px;height: 250px; margin: 100px' alt='Image'>");
                str += "<pre>글번호 : " + resp[0].f_num + "</pre>"
                str += "<pre>상품등록일 : " + resp[0].f_date + "</pre>"
                str += "<pre>유통기한 : " + resp[0].f_edate + "</pre>"
                str += "<pre>상품코드 : " + resp[0].f_code + "        </pre>"
                str += "<pre>대분류 : " + resp[0].c_num + "        </pre>"
                str += "<pre>중분류 : " + resp[0].c_num2 + "        </pre>"
                str += "<pre>가격 : " + resp[0].f_price + "원        </pre>"
                str += "<pre>수량 : " + resp[0].f_count + "        </pre>"
                str += "<pre>원산지 : " + resp[0].f_origin + "</pre>"
                str += "<pre>보관방법 : " + resp[0].f_save + "</pre>"
                str += "<pre>칼로리 : " + resp[0].f_cal + "</pre>"
                str += "<pre>조회수 : " + resp[0].f_views + "</pre>"
                detailsModalInfo.html(str)
                detailsModalBody.html(resp[0].f_contents)
                document.getElementById('detailsModalCloseBtn').click()
                let pageNum = document.getElementById('pageNumSaveFile').name
                let pageSize = document.getElementById('pageSizeSaveFile').name
                $.ajax({
                    method:'get',
                    url:"/modal/update/after/list",
                    data:{"pageNum":pageNum, "pageSize":pageSize}
                }).done((resp) => {
                    let curCgName = document.querySelector('#modal-input-submit').name

                    sortClassSwitch(curCgName, resp)
                    console.log("모달 업데이트 후 게시글 새로 불러오기 DONE")
                }).fail((err) => {
                    console.log("모달 업데이트 후 게시글 새로 불러오기 FAIL")
                })
            }).fail((err) => {
                console.log("모달 상세창 정보 수정 FAIL")
            })
        }

        function moveToDeleteBox(e) {
            console.log("[폐기] 이동")
            let pageNum = document.getElementById('pageNumSaveFile').name
            let pageSize = document.getElementById('pageSizeSaveFile').name
            let title = document.getElementById('boardTitle').innerHTML
            let isChecked = document.querySelectorAll("th input[type='checkbox']:checked")
            let deleteKeySet = [];
            // str += "<tr class='fooditem' data-cnum='" + elem.cnum + "' data-cnum2='" +
            // elem.c_num2 + "' data-cname='" + elem.c_name + "' data-title='" + elem.f_title + "'>"

            isChecked.forEach((item) => {
                let selectTr = item.closest('tr')
                let code = selectTr.getAttribute('data-code')
                deleteKeySet.push(code)
            })
            console.log(deleteKeySet)
            $.ajax({
                method: 'get',
                url: "/inven/deletebox",
                data: {"pageNum": pageNum, "pageSize": pageSize, "deleteKeySet": deleteKeySet}
            }).done((resp) => {
                console.log("[폐기] DONE")
                console.log(resp)
                console.log("제목"+title)
                sortClassSwitch2(title, resp)
            }).fail((err) => {
                console.log("[폐기] FAIL")
            })

        }

        function removeAndReplace(iv_priceSum) {
            return parseInt(iv_priceSum.replace(/,/g, ''), 10);
        }

        function finalOrder() {
            $.ajax({
                method: 'get', url: '/inventory/order'
            }).done((resp) => {
                console.log("[발주] DONE")
                sortClassSwitch2("발주", resp)
                let xButton = document.getElementById("orderModalClose");
                xButton.click();
            }).fail((err) => {
                console.log("[발주] FAIL")
            })
        }
        function allClickCk(selectAll) {
            const i = document.getElementsByName('selectCk')
            i.forEach((ck)=>{
                ck.checked = selectAll.checked;
            })
        }

        // 클래스 스위칭 및 각종 함수에서 테이블 생성 - [재고관리]
        function sortClassSwitch2(id, resp) {
            console.log("[재고] 테이블 생성기2 ON")
            if (!resp) {
                console.log(("sortClassSwitch2 resp null!!!"))
            }
            console.log("id = " + id)
            let str = "";
            let str2 = "";
            let str3 = "";
            let contents = $('#tableIsHere')
            let btnDiv = $('#purchaseDivBtn')
            let StringBuilder1 = "";
            let StringBuilder2 = "";
            let StringBuilder3 = "";
            let StringBuilder4 = "";
            let modalInput1 = $('#modalDetails')
            let modalInput2 = $('#modalDetails2')
            let modalInput3 = $('#modalDetails3')
            let modalInput4 = $('#modalDetails4')
            let modalImg = $('.uploadImg')
            let orderModalInfo = $('#orderModalInfo')
            let i = 1;
            contents.html('')
            if (id.substring(0, 1) === '재' || id.substring(0, 1) === 'f') {
                btnDiv.html('')
                str += "<table class='table my-0' id='dataList'>"
                str += "<tr id='mInven' style='vertical-align: center; background-color: #4e73df; color: white'>"
                str += "<th class='no-hover'>#</th>"
                str += "<th class='no-hover'><h4 style='text-align: center'>등록일<a onclick='boardListSortButton(this.id)' id='fdate'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>";
                str += "<th class='no-hover'><h4 style='text-align: center;'>유통기한<a onclick='boardListSortButton(this.id)' id='fedate'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>카테고리<a onclick='boardListSortButton(this.id)' id='fcname'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>상품코드<a onclick='boardListSortButton(this.id)' id='fcode'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>상품이름<a onclick='boardListSortButton(this.id)' id='ftitle'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>수량<a onclick='boardListSortButton(this.id)' id='fcount'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>평균금액<a onclick='boardListSortButton(this.id)' id='favgPrice'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>총 계<a onclick='boardListSortButton(this.id)' id='fcountSum'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<td><input id='allClickCk' onclick='allClickCk(this)' value='selectAll' type='checkbox'>전체&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type='button' onclick='moveToDeleteBox(this)' class='btn btn-danger'>폐기</button></td>"
                str += "</tr>"
                for (const elem of resp) {
                    str += "<tr class='fooditem' data-cnum='" + elem.c_num + "' data-code='" + elem.f_code + "' data-cname='" + elem.c_name + "' data-title='" + elem.f_title + "'>"
                    str += "<td>" + i + "</td>"
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_date} ~ ${elem.f_date2}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_edate} ~ ${elem.f_edate2}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.c_name}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_code}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_title}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_count}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_price}\u20A9</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.total}\u20A9</a></td>`;
                    str += "<th><input class='ckBox' name='selectCk' type='checkbox'></th>"
                    str += "</tr>"
                    i++
                }
                str += "</table><br><br>"
                contents.html(str)
            }  /*재고량 확인 IF문 END && 유통기한 확인 Start*/ else if (id.substring(0, 1) === '유' || id.substring(0, 1) === 'e') {
                btnDiv.html('')
                str += "<table class='table my-0' id='dataList'>"
                str += "<tr id='mInven' class='no-hover' style='vertical-align: center; background-color: #4e73df; color: white'>"
                str += "<td class='no-hover'>#</td>"
                str += "<th class='no-hover'><h4>유통기한<a onclick='boardListSortButton(this.id)' id='edate'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>카테고리<a onclick='boardListSortButton(this.id)' id='ecname'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>상품이름<a onclick='boardListSortButton(this.id)' id='etitle'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>수량<a onclick='boardListSortButton(this.id)' id='ecount'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<td><input id='allClickCk' onclick='allClickCk(this)' value='selectAll' type='checkbox'>전체&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type='button' onclick='moveToDeleteBox(this)' class='btn btn-danger'>폐기</button></td>"
                str += "</tr>"
                for (const elem of resp) {
                    str += "<tr class='fooditem' data-num='" + elem.f_code + "'>"
                    str += "<tr class='fooditem' data-cnum='" + elem.c_num + "' data-code='" + elem.f_code + "' data-cname='" + elem.c_name + "' data-title='" + elem.f_title + "'>"

                    str += "<td>" + i + "</td>"
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_edate}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.c_name}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_title}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_count}</a></td>`;
                    str += "<th><input class='ckBox' name='selectCk' type='checkbox'></th>"
                    str += "</tr>"
                    i++
                }
            }/*유통기한 확인 IF문 END && 발주하기 Start*/ else if (id.substring(0, 1) === '발' || id.substring(0, 1) === 'p') {
                console.log("발주 테이블 생성기 작동 시작!")
                modalImg.html('')
                StringBuilder4 += "<input type='text' value='거  래  처' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                StringBuilder4 += "<input type='text' value='가        격' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                StringBuilder3 += "<input type='text' id='Inven-modal-company' class='modal-input' style='height: 50px; width: 150px'><br>"
                StringBuilder3 += "<input type='text' id='Inven-modal-price' class='modal-input' style='height: 50px; width: 150px'><br>"
                StringBuilder2 += "<input type='text' value='상  품  명' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                StringBuilder2 += "<input type='text' value='수        량' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                StringBuilder1 += "<input type='text' id='Inven-modal-name' placeholder='' class='modal-input' style='height: 50px; width: 150px'><br>"
                StringBuilder1 += "<input type='text' id='Inven-modal-count' placeholder='' class='modal-input' style='height: 50px; width: 150px'><br>"
                modalInput1.html(StringBuilder1)
                modalInput2.html(StringBuilder2)
                modalInput3.html(StringBuilder3)
                modalInput4.html(StringBuilder4)
                str2 += "<button style=\"width: 200px\" class='btn btn-primary' data-bs-toggle='modal' data-bs-target='#orderModal'>발주</button><pre> </pre>"
                str2 += "<button id='plusBtn' style=\"width: 200px\" class='btn btn-primary' data-bs-toggle='modal' data-bs-target='#outerModal'>추가</button>"
                btnDiv.html(str2)
                str += "<table class='table my-0' id='dataList'>"
                str += "<tr id='mInven' style='vertical-align: center; background-color: #4e73df; color: white'>"
                str += "<td class='no-hover'>#</td>"
                str += "<th class='no-hover'><h4>거래처<a onclick='boardListSortButton(this.id)' id='pcompany'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>상품명<a onclick='boardListSortButton(this.id)' id='pcname'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>가격<a onclick='boardListSortButton(this.id)' id='pprice'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>부가세<a onclick='boardListSortButton(this.id)' id='pvat'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>수량<a onclick='boardListSortButton(this.id)' id='pcount'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>단가<a onclick='boardListSortButton(this.id)' id='ppriceSum'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>합계<a onclick='boardListSortButton(this.id)' id='ptotal'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                str += "<th class='no-hover'><h4>현황<a onclick='boardListSortButton(this.id)' id='pcurrent'></h4></th>"
                str += "<td><input id='allClickCk' onclick='allClickCk(this)' value='selectAll' type='checkbox'>전체&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type='button' onclick='ckBoxDeleteBtn(this)' class='btn btn-danger'>삭제</button></td>"
                str += "</tr>"
                orderModalInfo.html('')
                let totalSum = 0;
                let j = 1;
                for (const elem of resp) {
                    str += "<tr class='fooditem' data-num='" + elem.iv_num + "'>"
                    str += "<td>" + i + "</td>"
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.iv_company}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.iv_name}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.iv_price}\u20A9</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.iv_vat}\u20A9</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.iv_count}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.iv_priceSum}\u20A9</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.iv_total}\u20A9</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.iv_current}</a></td>`;
                    str += "<th><input class='ckBox' name='selectCk' type='checkbox'></th>"
                    str += "</tr>"
                    if (elem.iv_current === '발주 전') {
                        str3 += "<pre>" + j + "</pre>"
                        str3 += `<pre> 거래처 : ${elem.iv_company} </pre>`
                        str3 += `<pre> 상품 : ${elem.iv_name} </pre>`
                        str3 += `<pre> 가격 : ${elem.iv_priceSum} \u20A9 </pre>`;
                        str3 += `<pre> 수량 : ${elem.iv_count}</pre>`
                        str3 += `<pre> 합계 : ${elem.iv_total} \u20A9 </pre>-<br><br>`;
                        totalSum += removeAndReplace(elem.iv_total)
                        j++
                    }
                    i++
                }
                if (totalSum != null) {
                    let money = "";
                    if (totalSum >= 100000000) {  // 1억 이상일 경우
                        totalSum = Math.round(totalSum / 100000000);  // 억 단위로 변환
                        money = "억";
                    } else if (totalSum >= 10000) {  // 1만 이상일 경우
                        totalSum = Math.round(totalSum / 10000);  // 만 단위로 변환
                        money = "만";
                    }
                    str3 += `<h4><pre>                      합계 : 약 ${totalSum} ${money}</pre></h4>`;
                    orderModalInfo.html(str3)
                }

            } /*발주하기 IF문 End && 폐기함 Start*/ else if (id.substring(0, 1) === '폐' || id.substring(0, 1) === 'd') {
                btnDiv.html('')
                str += "<table class='table my-0' id='dataList'>"
                str += "<tr class='table-primary' id='mInven' style='vertical-align: center'>"
                str += "<td>#</td>"
                str += "<th class='no-hover'><h4 style='text-align: center'>등록일</h4></th>";
                str += "<th class='no-hover'><h4 style='text-align: center;'>유통기한</h4></th>"
                str += "<th class='no-hover'><h4>상품코드</h4></th>"
                str += "<th class='no-hover'><h4>상품이름</h4></th>"
                str += "<th class='no-hover'><h4>수량</h4></th>"
                str += "<th class='no-hover'><h4>평균금액</h4></th>"
                str += "<th class='no-hover'><h4>총 계</h4></th>"
                str += "<td><input id='allClickCk' onclick='allClickCk(this)' value='selectAll' type='checkbox'>전체&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type='button' onclick='permanentDelete()' class='btn btn-outline-danger'>영구삭제</button></td>"
                // str += "<th><button class='btn btn-outline-danger' onclick='permanentDelete()'>영구삭제</button></th>"
                str += "</tr>"
                for (const elem of resp) {
                    str += "<tr class='fooditem' data-cnum='" + elem.c_num + "' data-code='" + elem.f_code + "' data-cname='" + elem.c_name + "' data-title='" + elem.f_title + "'>"
                    str += "<td>" + i + "</td>"
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_date}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_edate}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_code}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_title}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_count}</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_price}\u20A9</a></td>`;
                    str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_price * elem.f_count}\u20A9</a></td>`;
                    str += "<th><input class='ckBox' name='selectCk' type='checkbox'></th>"
                    str += "</tr>"
                    i++
                }
            }
            str += "</table><br><br>"
            contents.html(str)
        }
        function permanentDelete() {
            alert('정말 영구삭제 하시겠습니까?')
            let deleteKeySet = [];
            let isChecked = document.querySelectorAll("th input[type='checkbox']:checked")

            isChecked.forEach((item) => {
                let selectTr = item.closest('tr')
                let code = selectTr.getAttribute('data-code')
                deleteKeySet.push(code)
            })
            console.log(deleteKeySet)
            $.ajax({
                method:'get',
                url:"/permanent/delete",
                data:{"deleteKeySet":deleteKeySet}
            }).done((resp) => {
                console.log("[영구 삭제] DONE")
                sortClassSwitch2('폐기함', resp)
            }). fail((err) => {
                console.log("[영구 삭제] FAIL")
            })
        }

        // 클래스 스위칭 및 각종 함수에서 테이블 생성 - [홈페이지 관리]
        function sortClassSwitch(id, resp) {
            console.log("[홈페이지] 테이블 생성기 ON")
            console.log(resp)
            if (!resp) {
                console.log("resp null")
            }
            let boardList = $('#tableIsHere');
            boardList.html('')
            let str = "";
            let i = 1;
            let listCnt = 1;
            if (id !== null) {
                if (id.substring(0, 1) === '식' || id.substring(0, 1) === 'f') {
                    str += "<table class='table my-0' id='dataList'>"
                    str += "<tr id='mPage'  style='vertical-align: center; background-color: #4e73df; color: white'>"
                    str += "<th class='no-hover'>#</th>"
                    str += "<th class='no-hover'><h4>상품코드<a onclick='boardListSortButton(this.id)' id='fcode'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>";
                    str += "<th class='no-hover'><h4>대분류<a onclick='boardListSortButton(this.id)' id='fcnum'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                    str += "<th class='no-hover'><h4>중분류<a onclick='boardListSortButton(this.id)' id='fcnum2'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                    str += "<th class='no-hover'><h4>상품이름<a onclick='boardListSortButton(this.id)' id='ftitle'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                    str += "<th class='no-hover'><h4>가격<a onclick='boardListSortButton(this.id)' id='fprice'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                    str += "<th class='no-hover'><h4>수량<a onclick='boardListSortButton(this.id)' id='fcount'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                    str += "<th class='no-hover'><h4>등록일<a onclick='boardListSortButton(this.id)' id='fdate'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                    str += "<th class='no-hover'><h4>유통기한<a onclick='boardListSortButton(this.id)' id='fedate'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>"
                    str += "<td><input id='allClickCk' onclick='allClickCk(this)' value='selectAll' type='checkbox'>전체&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type='button' onclick='ckBoxDeleteBtn(this)' class='btn btn-danger'>폐기</button></td>"
                    str += "</tr>"

                    for (const elem of resp) {
                        str += "<tr class='fooditem' data-num='" + elem.f_num + "'>"
                        str += "<td>" + i + "</td>"
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_code}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.c_num}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.c_num2}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_title}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_price}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_count}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_date}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.f_edate}</a></td>`;
                        str += "<th><input class='ckBox' name='selectCk' type='checkbox'></th>"
                        str += "</tr>"
                        i++
                        listCnt++
                    }
                } else if (id.substring(0, 1) === '레' || id.substring(0, 1) === 'r') {
                    str += "<table class='table my-0' id='dataList'>"
                    str += "<tr id='mPage' style='vertical-align: center; background-color: #4e73df; color: white'>"
                    str += "<th class='no-hover'>#</th>"
                    str += "<th class='no-hover'><h4>작성자<a onclick='boardListSortButton(this.id)' id='rName'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>";
                    str += "<th class='no-hover' style='width: 60%'><h4 style='text-align: center'>제목<a onclick='boardListSortButton(this.id)' id='rTitle'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>";
                    str += "<th class='no-hover'><h4>작성일<a onclick='boardListSortButton(this.id)' id='rDate'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>";
                    str += "<th class='no-hover'><h4>조회수<a onclick='boardListSortButton(this.id)' id='rViews'><img src='/assets/img/a/sort.png' style='width: 20px; height: 20px'></a></h4></th>";
                    str += "<td><input id='allClickCk' onclick='allClickCk(this)' value='selectAll' type='checkbox'>전체&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type='button' onclick='ckBoxDeleteBtn()' class='btn btn-danger'>삭제</button></td>"

                    for (const elem of resp) {
                        str += "<tr class='recipe' data-num='" + elem.r_num + "'>"
                        str += "<td>" + i + "</td>"
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.r_name}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.r_title}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.r_date}</a></td>`;
                        str += `<td><a href="javascript:void(0);" onclick="openDetailModal(this);">${elem.r_views}</a></td>`;
                        str += "<th><input class='ckBox' name='selectCk' type='checkbox'></th>"
                        str += "</tr>"
                        i++
                        listCnt++
                    }
                }
                str += "</table><br><br>"
                boardList.html(str)
            }

        }

// 게시글 정렬 버튼
        function boardListSortButton(id) {
            let ID = document.getElementById(id);
            console.log("[정렬] ON")
            console.log("id : " + id);
            let title = document.getElementById('subHeaderTitle').innerHTML
            console.log("현재 제목 : " + title)

            if (ID.className === "Asort selected") {
                ID.classList.remove("selected");
            } else if (ID.className === "Asort") {
                ID.classList.add("selected");
            }
            let pageNum = document.getElementById('pageNumSaveFile').name
            let pageSize = document.getElementById('pageSizeSaveFile').name
            let sortUrl = "";
            let thisData = "";
            switch (title) {
                case "게시판 관리":
                    sortUrl = "/boardlist/sort";
                    thisData = {"id": id, "pageNum": pageNum, "pageSize": pageSize}
                    break;
                case "재고 관리":
                    sortUrl = "/inventory/sort"
                    thisData = {"id": id, "pageNum": pageNum, "pageSize": pageSize}
                    break;
            }
            $.ajax({
                method: 'get', url: sortUrl, data: thisData
            }).done((resp) => {
                console.log("보드리스트 솔트 버튼");
                console.log("1 : " + id)
                console.log(resp)
                switch (ID.closest('tr').id) {
                    case "mPage":
                        sortClassSwitch(id, resp)
                        break;
                    case "mInven":
                        sortClassSwitch2(id, resp)
                        break;
                }
            }).fail((err) => {
                console.log("[정렬] 에러발생")
                console.log(err)
            })
        }

        function createModalInput(cgName, resp) {
            let createInput = $('#modalDetails');
            let createInput2 = $('#modalDetails2');
            let createInput3 = $('#modalDetails3');
            let createInput4 = $('#modalDetails4');
            let stringBuilder = "";
            let stringBuilder2 = "";
            let stringBuilder3 = "";
            let stringBuilder4 = "";
            let createBtn = $('#registerBtn-bottom')
            switch (cgName) {
                case "식자재" :
                    stringBuilder4 += "<input type='text' value='상품코드' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder4 += "<input type='text' value='대  분  류' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder4 += "<input type='text' value='용        량' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder4 += "<input type='text' value='상품가격' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder4 += "<input type='text' value='원  산  지' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder3 += "<input type='text' name='foodItemCode-modalInput' class='modal-input' style='height: 50px; width: 150px'><br>"
                    stringBuilder3 += "<select id='foodItemBigCg-modalInput' class='modal-input' style='height: 50px; width: 150px'>"
                    stringBuilder3 += "<option style='text-align: center' selected>==선택==</option>"
                    for (const elem of resp[1]) {
                        stringBuilder3 += "<option>"+elem.c_name+"</option>"
                    }
                    stringBuilder3 += "</select><br>"
                    stringBuilder3 += "<input type='text' name='foodItemVolume-modalInput' class='modal-input' style='height: 50px; width: 150px'><br>"
                    stringBuilder3 += "<input type='text' name='foodItemPrice-modalInput' class='modal-input' style='height: 50px; width: 150px'><br>"
                    stringBuilder3 += "<input type='text' name='foodItemOrigin-modalInput' class='modal-input' style='height: 50px; width: 150px'><br>"
                    stringBuilder2 += "<input type='text' value='보관방법' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder2 += "<input type='text' value='중  분  류' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder2 += "<input type='text' value='칼  로  리' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder2 += "<input type='text' value='수        량' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder2 += "<input type='text' value='유통기한' class='modal-input-name' style='height: 50px; width: 70px' disabled><br>"
                    stringBuilder += "<input type='text' name='foodItemSave-modalInput' placeholder='' class='modal-input' style='height: 50px; width: 150px'><br>"
                    stringBuilder += "<select id='foodItemMidCg-modalInput' class='modal-input' style='height: 50px; width: 150px'>"
                    stringBuilder += "<option style='text-align: center' selected>==선택==</option>"
                    for (const elem of resp[2]) {
                        stringBuilder += "<option>"+elem.c_name+"</option>"
                    }
                    stringBuilder += "</select><br>"
                    stringBuilder += "<input type='text' name='foodItemCal-modalInput' placeholder='' class='modal-input' style='height: 50px; width: 150px'><br>"
                    stringBuilder += "<input type='text' name='foodItemCounts-modalInput' placeholder='' class='modal-input' style='height: 50px; width: 150px'><br>"
                    stringBuilder += "<input type='text' name='foodItemExDate-modalInput' placeholder='' class='modal-input' style='height: 50px; width: 150px'><br>"
                    createBtn.html("<button id='registerBtn' class='btn btn-primary' data-bs-toggle='modal' data-bs-target='#outerModal'>등록</button>&nbsp;&nbsp;&nbsp")
                    break;
                case "레시피":
                    createBtn.html('')
                    break;
            }
            createInput.html(stringBuilder);
            createInput2.html(stringBuilder2);
            createInput3.html(stringBuilder3);
            createInput4.html(stringBuilder4);
        }

        // 게시글 리스트 체크박스로 삭제
        function ckBoxDeleteBtn(elem) {
            console.log("체크박스 삭제 진입")
            $('#allClickCk').checked = false;
            let pageNum = document.getElementById('pageNumSaveFile').name
            let pageSize = document.getElementById('pageSizeSaveFile').name
            let currentID = document.querySelector('#boardTitle').innerHTML
            let isChecked = document.querySelectorAll("th input[type='checkbox']:checked");
            let deleteKeySet = [];
            isChecked.forEach((item) => {
                let selectTr = item.closest('tr')
                let deleteKey = selectTr.getAttribute('data-num')
                deleteKeySet.push(deleteKey)
            })
            console.log(deleteKeySet)
            $.ajax({
                method: 'post',
                url: "/boardlist/delete",
                data: {"deleteKeySet": deleteKeySet, "pageNum": pageNum, "pageSize": pageSize}
            }).done((resp) => {
                console.log("[게시글 삭제] 완료")
                console.log(resp)
                sortClassSwitch2(currentID, resp)
            }).fail((err) => {
                console.log("[게시글 삭제] 실패")
            })
        }


// 카테고리 관리 스트링빌더 같은 느낌
        function cgSort(cgName) {
            console.log("카테고리 선택 진입")
            console.log(cgName.innerHTML)
            document.querySelectorAll('.cgSelector').forEach(function (el) {
                el.classList.remove('active');
            });
            cgName.classList.add('active');

            let urlSort;
            let title = document.querySelector('#boardTitle');
            let table = document.querySelector('#data');
            let modalTitle = document.querySelector('#outerModalTitle');
            // let currentPage = document.querySelector('#modal-input-submit').name

            table.style.display = 'none';
            document.getElementById('pageNumSaveFile').name = 1
            document.getElementById('pageSizeSaveFile').name = 10
            document.getElementById('startIdx').textContent = 1
            document.getElementById('endIdx').textContent = 10
            let pageNum = 1;
            let pageSize = 10;
            if (cgName.innerHTML === '레시피') {
                title.innerHTML = '레시피 게시글 리스트';
                modalTitle.innerHTML = '레시피 등록';
                document.querySelector('#modal-input-submit').name = '레시피'
                createModalInput(cgName.innerHTML)
                urlSort = "/boardlist?tab=recipe" + "&pageNum=" + pageNum + "&pageSize=" + pageSize;
            } else if (cgName.innerHTML === '식자재') {
                title.innerHTML = '식자재 리스트';
                modalTitle.innerHTML = '식자재 등록';
                document.querySelector('#modal-input-submit').name = '식자재'
                urlSort = "/boardlist?tab=fooditem" + "&pageNum=" + pageNum + "&pageSize=" + pageSize;
            } else if (cgName.innerHTML === '카테고리') {
                window.location.href = "/homepageC";
            }

            $.ajax({
                method: 'get', url: urlSort
            }).done((resp) => {
                if (cgName.innerHTML === '식자재') {
                    createModalInput(cgName.innerHTML ,resp)
                    sortClassSwitch(cgName.innerHTML, resp[0])
                } else if (cgName.innerHTML === '레시피') {
                    sortClassSwitch(cgName.innerHTML, resp)
                } else {
                    console.log("이건 뭘까")
                }
            }).fail((err) => {
                console.log("레시피/식자재 선택 에러")
            });
        }

        function closeOuterModal() {
            let xButton = document.getElementById("closeOuterModalButton");
            xButton.click();
        }

// 자바스크립트 폼데이터 객체 관련
        {
            function modalInputForm() {
                console.log("모달 인풋 폼 함수 진입");
                let title = $('#subHeaderTitle').text()
                let boardTitle = $('#boardTitle').text()
                let thisUrl = "";
                let thisData = "";
                let pageNum = document.getElementById('pageNumSaveFile').name
                let pageSize = document.getElementById('pageSizeSaveFile').name
                if (title === '게시판 관리') {
                    console.dir(document.querySelector('#previewImg'))
                    let fiCode = document.querySelector('input[name="foodItemCode-modalInput"]').value;
                    let fiBigCg = document.getElementById('foodItemBigCg-modalInput').value;
                    let fiPrice = document.querySelector('input[name="foodItemPrice-modalInput"]').value;
                    let fiMidCg = document.getElementById('foodItemMidCg-modalInput').value;
                    let fiCounts = document.querySelector('input[name="foodItemCounts-modalInput"]').value;
                    let fiExDate = document.querySelector('input[name="foodItemExDate-modalInput"]').value;
                    let fiContents = document.querySelector('input[name="summernoteModalContents"]')
                    let fiTitle = document.querySelector('input[name="foodItemTitle-modalInput"]').value;
                    let fiVolume = document.querySelector('input[name="foodItemVolume-modalInput"]').value;
                    let fiOrigin = document.querySelector('input[name="foodItemOrigin-modalInput"]').value;
                    let fiCal = document.querySelector('input[name="foodItemCal-modalInput"]').value;
                    let fiSave = document.querySelector('input[name="foodItemSave-modalInput"]').value;
                    let fiFile = document.querySelector('#preview')
                    console.log(fiFile)
                    let formSort = $('#formSort').innerHTML
                    let curCgName = document.querySelector('#modal-input-submit').name
                    let formData = new FormData();
                    if (curCgName === '레시피') {
                        // 레시피 관련 처리 
                    } else if (curCgName === '식자재') {
                        formData.append('file1', fiFile); // 이미지 첨부 관련 수정사항이 있어 잠시 주석처리 하였음
                        formData.append('fiCode', fiCode);
                        formData.append('fiBigCg', fiBigCg);
                        formData.append('fiPrice', fiPrice);
                        formData.append('fiMidCg', fiMidCg);
                        formData.append('fiCounts', fiCounts);
                        formData.append('fiExDate', fiExDate);
                        formData.append('fiTitle', fiTitle);
                        formData.append('fiContents', $('#summernote').val());
                        alert( $('#summernote').val().length)
                        formData.append('fiVolume', fiVolume);
                        formData.append('fiOrigin', fiOrigin);
                        formData.append('fiCal', fiCal);
                        formData.append('fiSave', fiSave);
                        let file = $('#attachment')
                        let files = file[0].files;
                        for (let i = 0; i < files.length; i++) {
                            formData.append("fiFiles", files[i])
                        }
                    } else {
                        alert("폼데이터 분류값이 잘못 되었습니다");
                        return false;
                    }
                    console.log("alk",formData)
                    thisUrl = "/fooditem/modalinput?" + "pageNum=" + pageNum + "&pageSize=" + pageSize;
                    thisData = formData;
                } else if (title === '재고 관리') {
                    console.log("모달인풋 재고관리 진입")
                    let iList = [];
                    let company = document.getElementById('Inven-modal-company').value;
                    let price = document.getElementById('Inven-modal-price').value;
                    let name = document.getElementById('Inven-modal-name').value;
                    let count = document.getElementById('Inven-modal-count').value;
                    console.log(pageNum)
                    console.log(pageSize)

                    thisUrl = "/inventory/modalinput";
                    thisData = {
                        "pageNum": pageNum,
                        "pageSize": pageSize,
                        "company": company,
                        "price": price,
                        "name": name,
                        "count": count
                    };
                } else {
                    console.log("모달 인풋 함수 에러")
                    console.log("TITLE : " + title)
                }
                let isFormData = thisData instanceof FormData;
                $.ajax({
                    type: 'POST',
                    url: thisUrl,
                    data: thisData,
                    contentType: isFormData ? false : 'application/x-www-form-urlencoded; charset=UTF-8',
                    processData: !isFormData
                }).done((resp) => {
                    console.log("폼데이터 비동기 DONE");
                    closeOuterModal()
                    let curCgName = document.querySelector('#modal-input-submit').name
                    document.querySelector('input[name="foodItemCode-modalInput"]').value = '';
                    document.querySelector('input[name="foodItemPrice-modalInput"]').value = '';
                    document.querySelector('input[name="foodItemCounts-modalInput"]').value = '';
                    document.querySelector('input[name="foodItemExDate-modalInput"]').value = '';
                    document.querySelector('input[name="foodItemVolume-modalInput"]').value = '';
                    document.querySelector('input[name="foodItemOrigin-modalInput"]').value = '';
                    document.querySelector('input[name="foodItemCal-modalInput"]').value = '';
                    document.querySelector('input[name="foodItemSave-modalInput"]').value = '';
                    document.getElementById('foodItemBigCg-modalInput').value = '';
                    document.getElementById('foodItemMidCg-modalInput').value = '';
                    document.getElementById('outerContentsTitle').value = '';
                    $('#summernote').summernote('reset'); // 에디터 초기화
                    switch (title) {
                        case "게시판 관리":
                            sortClassSwitch(curCgName, resp)
                            break;
                        case "재고 관리":
                            sortClassSwitch2(boardTitle, resp)
                    }
                }).fail((err) => {
                    console.log("폼데이터 비동기 FAIL");
                    console.log(err);
                });
            }
        }

        // 재고관리 페이지 메뉴선택
        function IVselect(t) {
            let subLink = document.querySelectorAll('.nav-sub-link')
            let subT = t.innerHTML.substring(0, 1)
            let createTable = $('#tableIsHere')
            let pageNum = document.getElementById('pageNumSaveFile').name
            let pageSize = document.getElementById('pageSizeSaveFile').name
            let boardTitle = document.querySelector('#boardTitle');
            let className = ""
            $('#data').html("")
            pageNum = 1;
            pageSize = 10;
            document.getElementById('pageNumSaveFile').name = pageNum;
            document.getElementById('pageSizeSaveFile').name = pageSize;
            console.log(t.innerHTML)
            boardTitle.innerHTML = t.innerHTML

            $.ajax({
                method: 'get',
                url: "/inventory/list",
                data: {"pageNum": pageNum, "pageSize": pageSize, "currentMenu": subT}
            }).done((resp) => {
                console.log("invenSelect DONE")
                console.log(resp)
                sortClassSwitch2(t.innerHTML, resp)
            }).fail((err) => {

            })
        }

// 파일 첨부 관련
        {
            function validFileType(filename) {
                const fileTypes = ["png", "jpg", "jpeg"];
                return fileTypes.indexOf(filename.substring(filename.lastIndexOf(".") + 1, filename.length).toLowerCase()) >= 0;
            }

            function validFileSize(file) {
                if (file.size > 10000000) { //10MB
                    return false;
                } else {
                    return true;
                }
            }

            function validFileNameSize(filename) {
                if (filename.length > 30) { //30자
                    return false;
                } else {
                    return true;
                }
            }

//이미지 띄우기
            function selectFile(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        document.getElementById('preview').src = e.target.result;
                    };
                    reader.readAsDataURL(input.files[0]);
                } else {
                    document.getElementById('preview').src = "";
                }
            }
        }
    }
}

// 메인






